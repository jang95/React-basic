화살표 함수(arrow funtion)는 ES6 문법에서 함수를 표현하는 새로운 방식
=> 이 문법은 주로 함수를 파라미터로 전달할 때 유용

setTimeout(function() {
  console.log('hello world');
}, 1000);

setTimeout(() => {
  console.log('hello world')
}, 1000);

이 문법이 기존 funtion을 대체 할 수 없는 것은 용도가 다르기 때문,
=> 무엇보다 this 값이 다름

function BlackDog() {
  this.name : '흰둥이';
  return {
    name: '검둥이',
    bark: function() {
      console.log(this.name + ': 멍멍');
    }
  }
}

const blackDog = new BlackDog();
blackDog.bark(); // 검둥이: 멍멍

=================================================

function WhiteDog() {
  this.name : '흰둥이';
  return {
    name: '검둥이',
    bark: () => {
      console.log(this.name + ': 멍멍');
    }
  }
}

const whitekDog = new BlackDog();
whitekDog.bark(); // 흰둥이: 멍멍

funtion을 사용했을 때는 검둥이가 나타나고, () => 를 사용했을 때는 흰둥이가 나타납니다.
일반 함수는 자신이 종속된 객체를 this로 가리키며
화살표 함수는 자신이 종속된 인스턴스를 가리킵니다.

화살표 함수는 값을 연산하여 바로 반환할 때 사용하면 가독성을 높일 수 있습니다.