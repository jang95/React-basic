- render 메서드
 render() {...}

* 컴포넌트의 모양새 정의
* 라이플사이클 메서드 중 유일한 필수 메서드
* 이 메서드 안에서 this.props와 this.state에 접근할 수 있으며, react 요소 반환(태그, 컴포넌트, null, false)
** 이 메서드 안에서는 이벤트 설정이 아닌 곳에서 setState를 사용하면 안 되며, DOM에 접근 x
   DOM 정보를 가져오거나 state에 변화를 줄 때는 ComponentDidMount에서 처리

- constructor 메서드
 constructor(props) {...}

 * 컴포넌트의 생성자 메서드로 컴포넌트를 만들 때 처름 실행
 * 초기 state를 정할 수 있음

 - getDerivedStateFromProps 메서드
 
 * props로 받아 온 값을 state에 동기화시키는 용도로 사용하며,
   컴포넌트가 마운트될 때와 업데이트될 때 호출

 - ComponentDidMount 메서드
  ComponentDidMount() {...}

* 컴포넌트를 만들고, 첫 렌더링을 다 마친 후 실행
* 다른 자바스크립트 라이브러리, 프레임워크의 함수를 호출, 이벤트 등록, setTimeout, setInterval,
  네트워크 요청 같은 비동기 작업 처리

- shouldComponentUpdata 메서드
 shouldComponentUpdata(nextProps, nextProps) { ... }

 * props 또는 state를 변경했을 때, 리렌더링을 시작할지 여부를 지정하는 메서드
 * 이 메서드에서는 반드시 true 값 또는 false 값을 반환
 ** 컴포넌트를 만들 때 이 메서드를 따로 생성하지 않으면 기본적으로 언제나 true 반환
 * 이 메서드가 false 값을 반환한다면 업데이트 과정은 여기서 중지
 * 현재 props와 state는 this.props와 this.state로 접근하고, 새로 설정될 props 또는 state는
   nextProps와 nextState로 접근 할 수 있음

- getSnapshotBeforeUpdate 메서드
 
 * 이 메서드는 render에서 만들어진 결과물이 브라우저에 실제로 반영되기 직전에 호출
 * 반환하는 값은 ComponentDidMount에서 세 번째 파라미터인 snapshot 값으로 전달받을 수 있음
   주로 업데이트하기 직전의 값을 참고할 일이 있을 때 사용(예: 스크롤바 위치 유지).

- componentDidUpdate 메서드
 componentDidUpdate(prevProps, prevState, snapshot) { ... }

 * 리렌더링을 완료한 후 실행
 * 업데이트가 끝난 직후이므로, DOM 관련 처리를 해도 무방
 * prevProps, prevState 사용하여 컴포넌트가 이전에 가졌던 데이터 접근 가능
 * getSnapshotBeforeUpdate에서 반환한 값이 있다면 여기서 snapshot 값을 전달받을 수 있음

- compoenntWillUnmount 메서드
 compoenntWillUnmount() { ... }
 
 * 컴포넌트를 DOM에서 제거할 때 실행
 * ComponentDidMount에서 등록한 이벤트, 타이머, 직접 생선한 DOM이 있다면 여기서 제거 작업을 해야함

 - componentDidCatch 메서드

  * 컴포넌트 렌더링 도중에 에러가 발생했을 때 애플리케이션이 먹통이 되지 않고 오류 UI를 보여 줄 수 있게 해 줌
