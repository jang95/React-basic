[3.3 props]

props는 properties를 줄인 표현으로 컴포넌트 속성을 설정할 때 사용하는 요소
props 값은 해당 컴포넌트를 불러와 사용하는 부모 컴포넌트에서 설정 가능

[3.3.1 JSX 내부에서 props 렌더링]


[3.3.2 컴포넌트 사용할 때 props 값 지정하기]


[3.3.3 props 기본값 설정: defaultProps]

[3.3.3 태그 사이의 내용을 보여 주는 children]

리액트 컴포넌트를 사용할 때 컴포넌트 태그 사이의 내용을 보여 주는 props가 있음
=> children

[3.3.5 비구조화 할당 문법을 통해 props 내부 값 추출하기]

ES6의 비구조화 할당 문법 사용

[3.3.6 propTypes를 통한 props 검증]

컴포넌트의 필수 props를 지정하거나 props의 타입을 지정할 때는 propTypes를 사용
-> import properties from 'prop-types'

[3.3.6.1 isRequired를 사용하여 필수 propTypes 설정]

propTypes를 지정할 때 뒤에 isRequired를 붙이면 됨

[3.3.6.2 더 많은 PropTypes 종류]

array: 배열

arrayOf(다른 PropType): 특정 PropType으로 이루어진 배열 의미
ex) arrayOf(PropTypes.number)는 숫자로 이루어진 배열

bool: true 혹은 false 값

func: 함수

number: 숫자

object: 객체

string: 문자열

symbol: ES6의 Symbol

node: 렌더링할 수 있는 모든 것(숫자, 문자열, 혹은 JSX 코드. children도 node PropType입니다.)

instanceOf(클래스): 특정 클래스의 인스턴스(예: instanceOf (MyClass))

oneOf(['dog', 'cat']): 주어진 배열 요소 중 값 하나

oneOfType([React.PropType.string, PropTypes.number]): 주어진 배열 안의 종류 중 하나

object(React.propTypes.number): 객체의 모든 키 값이 인자로 주어진 PropType인 객체

shape({ name: PropTypes.string, num: ProTypes.number}): 주어진 스키마를 가진 객채

any: 아무 종류